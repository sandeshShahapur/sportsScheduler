{"version":3,"sources":["components/Form.js","components/ScheduleTable.js","components/App.js","reportWebVitals.js","index.js"],"names":["shuffleTeams","teams","i","length","j","Math","floor","random","Form","_ref","handleFetchSchedules","form","setForm","useState","matchesBtwTeams","dayNumMatches","teamMatchesGap","teamDaysGap","curDate","Date","toISOString","split","alwEmtDay","alwTeamPairRecur","opSchedCnt","handleInputChange","e","name","value","type","checked","target","prevState","React","createElement","className","onSubmit","preventDefault","htmlForm","isSemanticallyValid","map","Number","team","trim","filter","Boolean","some","isNaN","num","setCustomValidity","classList","add","checkValidity","formData","noValidate","htmlFor","id","placeholder","onChange","required","min","onClick","fillWithExampleValues","ScheduleTable","schedules","selectedScheduleIndex","setSelectedScheduleIndex","Error","role","selectedSchedule","schedule","index","key","style","maxHeight","match","App","isMounted","setIsMounted","showDesktopModeSuggestion","setShowDesktopModeSuggestion","isLoading","setIsLoading","error","setError","setSchedules","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","fetchSchedules","async","response","fetch","method","headers","body","JSON","stringify","ok","status","concat","json","fetchCompleted","loadingTimeout","setTimeout","failTimeout","message","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0e999fc9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Form = ({ handleFetchSchedules } ) => {\r\n  const [form, setForm] = useState({\r\n    teams: \"\",\r\n    matchesBtwTeams: \"\",\r\n    dayNumMatches: \"\",\r\n    teamMatchesGap: \"\",\r\n    teamDaysGap: \"\",\r\n    curDate: new Date().toISOString().split(\"T\")[0],\r\n    alwEmtDay: false,\r\n    alwTeamPairRecur: false,\r\n    opSchedCnt: \"\",\r\n  });\r\n\r\n  const fillWithExampleValues = () => {\r\n    setForm({\r\n      teams: \"Sharks, Thunder, Titans, Raptors\",\r\n      matchesBtwTeams: \"2\",\r\n      dayNumMatches: \"1, 1, 1, 1, 1, 2, 2\",\r\n      teamMatchesGap: \"1\",\r\n      teamDaysGap: \"1\",\r\n      curDate: new Date().toISOString().split(\"T\")[0],\r\n      alwEmtDay: true,\r\n      alwTeamPairRecur: true,\r\n      opSchedCnt: \"2\",\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setForm((prevState) => ({\r\n      ...prevState,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const htmlForm = e.target;\r\n\r\n    let isSemanticallyValid = true;\r\n    const dayNumMatches = form.dayNumMatches.split(\",\").map(Number);\r\n    const teams = shuffleTeams(form.teams.split(\",\").map((team) => team.trim()).filter(Boolean));\r\n\r\n    if (dayNumMatches.some(isNaN) || dayNumMatches.some((num) => num < 1)){\r\n      isSemanticallyValid = false;\r\n      htmlForm.dayNumMatches.setCustomValidity(\"Invalid number\");\r\n    } else {\r\n      htmlForm.dayNumMatches.setCustomValidity(\"\");\r\n    }\r\n    if (teams.length < 3) {\r\n      isSemanticallyValid = false;\r\n      htmlForm.teams.setCustomValidity(\"Please provide at least 3 teams\");\r\n    } else {\r\n      htmlForm.teams.setCustomValidity(\"\");\r\n    }\r\n\r\n    htmlForm.classList.add(\"was-validated\");\r\n    if (!htmlForm.checkValidity() || !isSemanticallyValid)\r\n      return;\r\n\r\n    const formData = {\r\n      \"teams\": teams,\r\n      \"matchesBtwTeams\": Number(form.matchesBtwTeams),\r\n      \"dayNumMatches\": dayNumMatches,\r\n      \"teamMatchesGap\": Number(form.teamMatchesGap),\r\n      \"teamDaysGap\": Number(form.teamDaysGap),\r\n      \"curDate\": form.curDate,\r\n      \"alwEmtDay\": form.alwEmtDay,\r\n      \"alwTeamPairRecur\": form.alwTeamPairRecur,\r\n      \"opSchedCnt\": Number(form.opSchedCnt),\r\n    };\r\n    handleFetchSchedules(formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-10 col-md-8 col-lg-6 col-xl-5 border rounded-2 p-4 shadow mb-5\">\r\n      <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"teams\" className=\"form-label mb-1\">\r\n            Teams\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"teams\"\r\n            name=\"teams\"\r\n            placeholder=\"comma seperated\"\r\n            value={form.teams}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\">Please provide minimum 3 teams.</div>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"matchesBtwTeams\" className=\"form-label mb-1\">\r\n            {\" \"}\r\n            Matches Between Teams\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"matchesBtwTeams\"\r\n            name=\"matchesBtwTeams\"\r\n            placeholder=\"minimum 1\"\r\n            value={form.matchesBtwTeams}\r\n            onChange={handleInputChange}\r\n            min={1}\r\n            required\r\n          />\r\n          {!form.matchesBtwTeams ? (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide the number of matches between teams.\r\n            </div>\r\n          ) : (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide a valid number.\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"dayNumMatches\" className=\"form-label mb-1\">\r\n            Matches Count on Each Day\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"dayNumMatches\"\r\n            name=\"dayNumMatches\"\r\n            placeholder=\"comma seperated (it will loop)\"\r\n            value={form.dayNumMatches}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {!form.dayNumMatches ? (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide the matches count on each day.\r\n            </div>\r\n          ) : (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide valid counts.\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"teamMatchesGap\" className=\"form-label mb-1\">\r\n            Matches Gap Count for a Team\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"teamMatchesGap\"\r\n            name=\"teamMatchesGap\"\r\n            placeholder=\"0 for allowing no gap\"\r\n            value={form.teamMatchesGap}\r\n            onChange={handleInputChange}\r\n            min={0}\r\n            required\r\n          />\r\n          {!form.teamMatchesGap ? (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide the team matches gap.\r\n            </div>\r\n          ) : (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide a valid number.\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"teamDaysGap\" className=\"form-label mb-1\">\r\n            Days Gap Count for a Team\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"teamDaysGap\"\r\n            name=\"teamDaysGap\"\r\n            placeholder=\"0 for allowing no gap\"\r\n            value={form.teamDaysGap}\r\n            onChange={handleInputChange}\r\n            min={0}\r\n            required\r\n          />\r\n          {!form.teamDaysGap ? (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide the team days gap.\r\n            </div>\r\n          ) : (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide a valid number.\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"curDate\" className=\"form-label mb-1\">\r\n            Starting Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            id=\"curDate\"\r\n            name=\"curDate\"\r\n            value={form.curDate}\r\n            onChange={handleInputChange}\r\n          />\r\n          <div className=\"invalid-feedback\">Invalid starting date.</div>\r\n        </div>\r\n\r\n        <div className=\"mb-1 form-check\">\r\n          <label className=\"form-check-label\" htmlFor=\"alwEmtDay\">\r\n            Allow Days with no Matches Played\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            id=\"alwEmtDay\"\r\n            name=\"alwEmtDay\"\r\n            checked={form.alwEmtDay}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4 form-check\">\r\n          <label className=\"form-check-label\" htmlFor=\"alwTeamPairRecur\">\r\n            Allow Consecutive Matches with same Team Matchup\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            id=\"alwTeamPairRecur\"\r\n            name=\"alwTeamPairRecur\"\r\n            checked={form.alwTeamPairRecur}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"opSchedCnt\" className=\"form-label mb-1\">\r\n            Output Schedule Count\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"opSchedCnt\"\r\n            name=\"opSchedCnt\"\r\n            placeholder=\"0 to output all schedules\"\r\n            value={form.opSchedCnt}\r\n            onChange={handleInputChange}\r\n            min={0}\r\n            required\r\n          />\r\n          {!form.opSchedCnt ? (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide the optional schedule count.\r\n            </div>\r\n          ) : (\r\n            <div className=\"invalid-feedback\">\r\n              Please provide a valid number.\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"row justify-content-between column-gap-1\">\r\n          <button type=\"submit\" className=\"col-auto col-sm-5 btn btn-primary mr-2\">\r\n            Submit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"col-auto btn btn-secondary\"\r\n            onClick={fillWithExampleValues}\r\n          >\r\n            Fill Example Parameters\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst shuffleTeams = (teams) => {\r\n  for (let i = teams.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [teams[i], teams[j]] = [teams[j], teams[i]];\r\n  }\r\n  return teams;\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ScheduleTable = ({ schedules }) => {\r\n  const [selectedScheduleIndex, setSelectedScheduleIndex] = useState(0);\r\n\r\n  if (typeof schedules === \"undefined\") {\r\n    throw new Error(\"Failed to load schedules\");\r\n  }\r\n\r\n  if (schedules && schedules.length === 0) {\r\n    return (\r\n      <div className=\"alert alert-warning\" role=\"alert\">\r\n        Could not generate any schedules for the given parameters. Please alter the parameters. <br/>\r\n        <strong>Suggestion:</strong> Try enabling empty days and team pair recur, or you could also increase the number of teams.\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  // Shuffle the schedules array to display a random schedule by default\r\n  for (let i = schedules.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [schedules[i], schedules[j]] = [schedules[j], schedules[i]];\r\n  }\r\n\r\n  let selectedSchedule = schedules[selectedScheduleIndex];\r\n\r\n  return (\r\n    <div className=\"p-4 border bor rounded-2 shadow\">\r\n      <div className=\"\">\r\n        <select\r\n          className=\"form-select\"\r\n          value={selectedScheduleIndex}\r\n          onChange={(e) => setSelectedScheduleIndex(e.target.value)}\r\n        >\r\n          {schedules.map((schedule, index) => (\r\n            <option key={index} value={index}>\r\n              Schedule {index + 1}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <br />\r\n\r\n      {/* Display the selected schedule in a table */}\r\n      <div className=\"table-fit overflow-y-auto\" style={{ maxHeight: \"620px\" }}>\r\n        <table className=\"table table-hover pe-5 table-fit\">\r\n          <thead>\r\n            <tr>\r\n              <th>Match</th>\r\n              <th>Day</th>\r\n              <th>Date</th>\r\n              <th>Weekday</th>\r\n              <th>Team 1</th>\r\n              <th>Team 2</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {selectedSchedule.map((match, index) => (\r\n              <tr key={index}>\r\n                <td>{match[0]}</td>\r\n                <td>{match[1]}</td>\r\n                <td>{match[2]}</td>\r\n                <td>{match[3]}</td>\r\n                <td>{match[4]}</td>\r\n                <td>{match[5]}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScheduleTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Form from \"./Form\";\r\nimport ScheduleTable from \"./ScheduleTable\";\r\n\r\nconst App = () => {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [showDesktopModeSuggestion, setShowDesktopModeSuggestion] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [schedules, setSchedules] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth < 768) {\r\n        setShowDesktopModeSuggestion(true);\r\n      } else {\r\n        setShowDesktopModeSuggestion(false);\r\n      }\r\n    };\r\n\r\n    handleResize(); // Check viewport width on component mount\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n  const handleFetchSchedules = async (formData) => {\r\n    setIsMounted(true);\r\n    let fetchCompleted = false;\r\n    const loadingTimeout = setTimeout(() => {\r\n      if (!fetchCompleted) {\r\n        setIsLoading(true);\r\n      }\r\n    }, 2 * 1000); // 2 seconds\r\n    const failTimeout = setTimeout(() => {\r\n      if (!fetchCompleted) {\r\n        setError(\"Process failure likely due to heavy computation.<br> Suggestions: Try with fewer teams or matches between teams.\");\r\n        setIsLoading(false);\r\n      }\r\n    }, 70 * 1000); // 70 seconds\r\n    setError(\"\");\r\n\r\n    try {\r\n      setSchedules(await fetchSchedules(formData));\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      clearTimeout(loadingTimeout);\r\n      clearTimeout(failTimeout);\r\n      fetchCompleted = true;\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSchedules = async (formData) => {\r\n    const response = await fetch(\r\n      \"https://sportsscheduler-vxsj.onrender.com/generateStandardSchedule\", // \"http://localhost:8080/generateStandardSchedule\"\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 500) {\r\n        throw new Error(\r\n          \"Failed to generate schedules! <br /> Likely invalid parameters, please try again with different parameters.\"\r\n        );\r\n      } else {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n    }\r\n\r\n    return response.json();\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"container-fluid mb-5 p-5 bg-dark text-white\">\r\n        <h1 className=\"display-4 fw-bold\">Sports Tournament Scheduler</h1>\r\n        <p className=\"ps-md-2\">\r\n          A tool to generate tournament schedules for a given set of teams and parameters.\r\n        </p>\r\n      </header>\r\n\r\n      <main className=\"container mb-5\">\r\n        <div className={`row align-content-center justify-content-center ${isMounted ? \" justify-content-xl-between\" : \"\"}`}>\r\n          <Form handleFetchSchedules={handleFetchSchedules} />\r\n          {showDesktopModeSuggestion && (\r\n            <div className=\"alert alert-info mt-3\" role=\"alert\">\r\n              For a better experience, please switch to desktop mode.\r\n            </div>\r\n          )}\r\n\r\n          {isMounted && (\r\n            <div className=\"col-12 col-xl-6\">\r\n              {error ? (\r\n                  <div className=\"alert alert-danger\" role=\"alert\">{error}</div>\r\n              ) : isLoading ? (\r\n                <div>\r\n                  <div className=\"spinner-border float-start me-3 mb-5\" role=\"status\"></div> Loading... <br />\r\n                  If it is your first submit, it may take up to a minute.\r\n                </div>\r\n              ) : schedules ? (\r\n                  <ScheduleTable schedules={schedules} />\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n\r\n      {error && (\r\n        <div className=\"mt-3 border-top border-3 pt-3 mb-2 text-center text-danger\">\r\n          If you are using any adblocker (e.g., Brave Shield of Brave browser), consider disabling it if you faced an error when submitting.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}